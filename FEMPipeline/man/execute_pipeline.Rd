% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{execute_pipeline}
\alias{execute_pipeline}
\title{FEM pipeline}
\usage{
execute_pipeline(
  phenotype_file_name,
  read_count_dir_path,
  read_count_file_name,
  sep = "",
  skip_row_count = 0,
  row_count = -1,
  na_strings = "NA",
  classification_criteria,
  filter_expression = expression(TRUE),
  classes,
  extracted_count_file_name = "read_counts.txt",
  output_label_file_name = "output_labels.txt",
  dataset_id,
  cores = 3,
  results_dir_path = "results",
  fems_to_run = c(),
  fems_to_ignore = c(),
  perform_filter = TRUE,
  norm = c("norm_log_cpm", "norm_log_cpm_simple", "quantile", "norm_quantile", "vsn",
    "norm_log_tmm", "log_tmm", "none"),
  classifier_feature_imp = FALSE,
  random_seed = 1000
)
}
\arguments{
\item{phenotype_file_name}{Name of the file containing phenotype info - class of each sample.
\itemize{
\item should be a tab separated file
\item should have one field named "Sample" and contain sample names as in the read count file
}

example phenotype file contents given below :

Sample Age Gender Technology    GBMVsControl     GBMVsGlioma

s1     60    M    Microarray    GBM     GBM

s2     65    M   RNASeq        GBM     GBM

s3     59    F    RNASeq        Control NA

s4     55    F    Microarray    NA        Glioma

s5     50    M     RNASeq        Control NA}

\item{read_count_dir_path}{directory path for read count file}

\item{read_count_file_name}{filename of the read count file. Should be in (transcripts x samples) format.
Other biomarkers can also be used.
In general case : (biomarkers x samples) : biomarkers along rows, samples along columns}

\item{sep}{field separator character in read count file}

\item{classification_criteria}{Column in the phenotype file to perform classification on
Eg : GBMVsControl}

\item{filter_expression}{Filtering to be done on the samples based on a column in the phenotype file
Eg: Age > 55}

\item{classes}{Classes to be compared : c("negativeclassname", "positiveclassname")}

\item{extracted_count_file_name}{name of the file to output the read count file after filtering for classification_criteria and filter_expression.
File data format : (transcripts x samples)}

\item{output_label_file_name}{name of the file with labels for filtered samples as in extracted_count_file.
File data format : (2 columns : Sample, Label)}

\item{dataset_id}{An ID for the data to be written in results}

\item{cores}{Number of cores to be used for parallel processing}

\item{fems_to_run}{Vector of names of FEMs to run  Eg: c("t-test", "mrmr30", "mrmr50"). Empty vector value runs pipeline on all FEMs}

\item{fems_to_ignore}{Vector of names of FEMs to not run from the list of all allowed FEMs  Eg: c("t-test_holm", "ga_rf")

To see all allowed FEMs use show_allowed_fems()}

\item{perform_filter}{Should filtering for low expressed transcripts be performed}

\item{norm}{Normalization method to be used}

\item{classifier_feature_imp}{Should feature importance by the classifier be written to a file.
Applicable only for Random Forest}

\item{random_seed}{random seed value set before train test k-fold split}
}
\description{
Runs the Feature Extraction Method comparison pipeline for the given data
}
